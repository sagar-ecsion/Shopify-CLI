<div class="shop-sidebar-inner">
  <div class="shop-sidebar sidebar-filter">
    <div class="clear-content">
      <h6 class="title">{{ settings.filter_title }}</h6>
      <a href="/collections/all" class="clear">{{ settings.clear_title }}</a>  
    </div>
    <ul class="filter-selected">
      <li class="tag-selected-filter"></li>
    </ul>
  </div>
  <div class="shop-sidebar sidebar-wedget">
    {%- if settings.categories_title != '' -%}
    <h6 class="title">{{ settings.categories_title }}</h6>
    <a class="title" data-bs-toggle="collapse" href="#collapse-{{ settings.categories_title }}">{{ settings.categories_title }}</a>
    {%- endif -%}
    <div class="collapse scroll-top" id="collapse-{{ settings.categories_title }}">
      <ul class="scrollbar">
        {% for c in collections %}
        {%- if c.products_count >= 1 -%}
        <li class="{% if collection and collection.handle == c.handle %}active{% endif %}">
          {%- if collection and collection.handle == c.handle -%}
          <input type="checkbox" checked="checked" name="{{ c.title }}" class="cust-checkbox">
          {%- else -%}
          <input type="checkbox" class="cust-checkbox" name="{{ c.title }}">
          {%- endif -%}
          <a href="{{ c.url }}" class="cust-checkbox-label" title="{{ c.title }}">
            <span class="filter-name">{{ c.title | truncate: 20 }}</span>            
            <span class="count-check">{% if c.products_count < 10 %} {{ c.products_count | prepend: "0" }} {% else %} {{ c.products_count }}{% endif %}</span>
            <span class="cust-check"></span>
          </a>
        </li>
        {%- endif -%}
        {% endfor %}
      </ul>
    </div>
  </div>
  {% if collection.all_tags.size > 1 %}
  {% for tag in collection.all_tags %}
  {% if tag contains '_' %}
  {% assign splitTag = tag | split: '_' %}
  {% unless filterTags contains splitTag.first %}
  {% capture filterTags %}{{ filterTags }}+{{ splitTag.first }}{% endcapture %}
  {% endunless %}
  {% endif %}
  {% endfor %}
  {% assign filterTags = filterTags | slice: 1, filterTags.size | split: '+' %}
  
  <form id="custom-collection-filter" action="/collections/{{ collection.handle }}">
    {% assign i = 0 %}
    {% for tag in filterTags %}
    <div class="shop-sidebar sidebar-wedget {{ tag | capitalize }}">
      {% assign i = i | plus:1 %}
      <h6 class="title">{{ tag | capitalize }}</h6>
      <a class="title" data-bs-toggle="collapse" href="#collapse{{ i }}">{{ tag | capitalize }}</a>
      <div class="collapse scroll-top" id="collapse{{ i }}">
        <ul class="multiple-filters scrollbar">
          {% for aTag in collection.all_tags %}
          {% assign tempTag = aTag | split: '_' %}
          {% if tag == tempTag.first %}
          <li class="{{ tag }}">
            <label class="cust-checkbox-label {{ tag }}">
              <span class="filter-name">{{ tempTag.last | truncate: 20 }}</span>
              {% if current_tags contains aTag %}
              <input type="checkbox" checked="checked" data-tag="{{aTag}}" data-remove-tag="{{tempTag.last}}" name="{{ tempTag.first }}" value="{{ aTag }}" class="cust-checkbox active-filter">
              {% else %}
              <input type="checkbox" data-tag="{{aTag}}" data-remove-tag="{{tempTag.last}}" name="{{ tempTag.first }}" value="{{ aTag }}" class="cust-checkbox">
              {% endif %}
              <span class="cust-check" data-tag="{{aTag}}" data-remove-tag="{{tempTag.last}}"  style="background: {{ tempTag.last | truncate: 20}} no-repeat center; background-size: initial;"></span>
            </label>
          </li>
          {% endif %}
          {% endfor %}
        </ul>
      </div>
    </div>
    {% endfor %}
  </form>
<script>
    var arr=[];
    $('.multiple-filters li input').each(function() {
        
        $(this).on('click',function(i) {
          $('.ajax-filter-loader').css('display','block');
           

          if($(this).hasClass('active-filter')){
            
            var remove_elements = $(this).attr('data-tag');
            
            var new_url = removeItemAll(arr,remove_elements);
            $(this).removeClass('active-filter');
            $(this).next('span').removeClass('active-filter');
            $('#'+remove_elements).remove();
            
          }else{
            
            if($('.st-active-filter').length >= 1){
   
              arr.push($(this).attr('data-tag'));
              $(this).addClass('active-filter');
              $(this).next('span').addClass('active-filter');
              var new_url = arr.join("+");

            }else{
              
               arr.push($(this).attr('data-tag'));
               $(this).addClass('active-filter');
               $(this).next('span').addClass('active-filter');
               var new_url = arr.join("+");
              
            }
            var new_data_tag = $(this).attr('data-tag');
            var remove_ele = $(this).attr('data-remove-tag');
            $('.tag-selected-filter').append('<a href="javascript:void(0);" class="remove-filter" id='+new_data_tag+' data-tag='+new_data_tag+'><span class="remove-filter-selected">'+remove_ele+'<i class="ti-close"></i></span></a>');
          }
          
          
          
          {% if collection.handle %}
            var shop = '/collections/{{ collection.handle }}/';
          {% elsif collection.products.first.type == collection.title %}
            var shop = '{{ collection.title | url_for_type }}';
          {% elsif collection.products.first.vendor == collection.title %}
            var shop = '{{ collection.title | url_for_vendor }}';
          {% endif %}
            
          if(typeof new_url === "undefined" ){
            var redirect_url =  shop;
          }else{
            var redirect_url =  shop + new_url;
          }
          //console.log(redirect_url);
          
            $.get({
              url: redirect_url,
              success: function (data) {
            setTimeout(function(){ 
                  var get_data = $(data).find('.shop-grid').html();
                  ///console.log(get_data);
                  $('.get-data-products').html(get_data);
                  $('.st-col-item').css('display','block');
                  $('.ajax-filter-loader').css('display','none');
                  SPR.registerCallbacks();
                  SPR.initRatingHandler();
                  SPR.initDomEls();
                  SPR.loadProducts();
                  SPR.loadBadges();
                }, 300);

              }
           });
           window.history.pushState({path:redirect_url},'',redirect_url);
           
          
           if($('.remove-filter').length >= 1){
             $('.sidebar-filter').css('display','block');
          }else{
             $('.sidebar-filter').css('display','none');
          }
           
          
           
          
        });
        
     });
      
     $(document).on("click",".remove-filter",function() {
         
        $('.ajax-filter-loader').css('display','block');
         var remove_elements = $(this).attr('data-tag');
         var url = location.href
         var lastURLSegment = url.substr(url.lastIndexOf('/') + 1);
         console.log(arr);
         var new_url = removeItemAll(arr,remove_elements);
         if(arr.length == 1){
          var  redirect_url = new_url;
        }else{
          var  redirect_url = new_url.join("+");
        }
         console.log(redirect_url);
         {% if collection.handle %}
            var shop = '/collections/{{ collection.handle }}/';
          {% elsif collection.products.first.type == collection.title %}
            var shop = '{{ collection.title | url_for_type }}';
          {% elsif collection.products.first.vendor == collection.title %}
            var shop = '{{ collection.title | url_for_vendor }}';
          {% endif %}
          
          if(typeof new_url === "undefined" ){
            ///alert('sdsd');
            var redirect_new_url =  shop;
            
          }else{
            var redirect_url =  shop + redirect_url;
          }
            
         $.get({
              url: redirect_url,
              success: function (data) {
            setTimeout(function(){ 
                  var get_data = $(data).find('.shop-grid').html();
                  ///console.log(get_data);
                  $('.get-data-products').html(get_data);
                  $('.st-col-item').css('display','block');
                $('.ajax-filter-loader').css('display','none');
                  SPR.registerCallbacks();
                  SPR.initRatingHandler();
                  SPR.initDomEls();
                  SPR.loadProducts();
                  SPR.loadBadges();
                }, 300);
              }
           });
           window.history.pushState({path:redirect_url},'',redirect_url);
           $(this).remove();
           $('.active-filter').each(function(){
              //console.log($(this).val());
             if($(this).val() == remove_elements){
                  $(this).removeClass('active-filter');
                  $(this).next('span').removeClass('active-filter');
             }
           });
          if($('.st-active-filter').length >= 1){
            $('.sidebar-filter').css('display','block');
          }else{
            $('.sidebar-filter').css('display','none');
          }
     });
    

    (function($){
      //alert('sfsfrer');
        
      var url = location.href;
      var lastURLSegment = url.substr(url.lastIndexOf('/') + 1);
      var active_filter = lastURLSegment.split("+");
      console.log(active_filter);
      if(active_filter.length != null){
        
        
          $('.cust-checkbox').each(function(){
            
            if(jQuery.inArray($(this).val(), active_filter) != -1){
              //alert('fff');
                
                var remove_ele = $(this).val().split("_");
               
                $(this).addClass('active-filter');
                $(this).next('span').addClass('active-filter');
                $('.tag-selected-filter').append('<a href="javascript:void(0);" class="remove-filter" id='+active_filter+' data-tag='+active_filter+'><span class="remove-filter-selected">'+remove_ele[1]+'<i class="ti-close"></i></span></a>');
                $('.tag-selected-filter').addClass('st-active-filter');
                arr.push($(this).val());
            }
          });

          if($('.remove-filter').length >= 1){
             $('.sidebar-filter').css('display','block');
          }else{
             $('.sidebar-filter').css('display','none');
          }
        
      }
      
    })(jQuery);
  
    function removeItemAll(arr, value) {
      var i = 0;
      while (i < arr.length) {
        if (arr[i] === value) {
          arr.splice(i, 1);
        } else {
          
          ++i;
        }
      }
      return arr;
    }

  </script>
  {% endif %}
</div>
<script>
  $(".sidebar-wedget li.active a").removeAttr("href");
</script>
<style>
  .shop-sidebar-inner .shop-sidebar.sidebar-filter{
    display: none;
  }
  .shop-sidebar-inner .shop-sidebar{
    margin-bottom: 30px;
    padding-bottom: 30px;
    border-bottom: 1px solid #e2e2e2;
  }
  .shop-sidebar-inner form .shop-sidebar:last-child{
    margin-bottom: 0;
    padding-bottom: 0px;
    border-bottom: none;
  }
  .shop-sidebar .title{
    font-size: 16px;
    padding-bottom: 30px;
    font-weight: 500;
    text-transform: capitalize;
    line-height: 1;
  }
  .shop-sidebar a.title{
    display: none;
  }
  .shop-sidebar .collapse:not(.show){
    display: block;
  }
  .shop-sidebar ul.scrollbar{
    max-height: 260px;
    overflow-y: auto;
  }
  .shop-sidebar ul.scrollbar li{
    {% if settings.enable_rtl %}
    padding: 12px 0px 0px 15px;
    {% else %}
    padding: 12px 15px 0px 0px;
    {% endif %}
  }
  .shop-sidebar ul.scrollbar li:first-of-type{
    {% if settings.enable_rtl %}
    padding: 0px 0px 0px 15px;
    {% else %}
    padding: 0px 15px 0px 0px;
    {% endif %}

  }
  @media (max-width: 767px){
    .shop-sidebar-inner .shop-sidebar{
      margin-bottom: 14px;
      padding-bottom: 0px;
    }
    .shop-sidebar .title{
      display: none;
    }
    .shop-sidebar a.title{
      padding-bottom: 12px;
      display: flex;
      align-items: center;
      justify-content: space-between;
      position: relative;
      -webkit-transition: all 0s ease-in-out 0s;
      -o-transition: all 0s ease-in-out 0s;
      transition: all 0s ease-in-out 0s;
    }
    .shop-sidebar a.title[aria-expanded="false"]{
      color: #222;
    }
    .shop-sidebar a.title[aria-expanded="true"]{
      color: {{ settings.color_primary }};
    }
    .shop-sidebar a.title::after{
      font-size: 12px;
      color: #222;
      content: "\e64b";
      font-family: 'themify';
    }
    .shop-sidebar a.title[aria-expanded="true"]::after{
      content: "\e648";
      color: {{ settings.color_primary }};
    }
    .shop-sidebar .collapse:not(.show){
      display: none;
    }
}
  /* clear content */
  .shop-sidebar.sidebar-filter .clear-content{
    position: relative;
  }
  .shop-sidebar.sidebar-filter .clear-content .title{
    display: block;
  }
  .shop-sidebar.sidebar-filter a.clear{
    position: absolute;
    {% if settings.enable_rtl %}
    left: 0px;
    {% else %}
    right: 0px;
    {% endif %}
    top: 0;
    -webkit-transition: all 0.0s ease-in-out 0s;
    -o-transition: all 0.0s ease-in-out 0s;
    transition: all 0.0s ease-in-out 0s;
  }
  .sidebar-filter ul.filter-selected{}
  .sidebar-filter ul.filter-selected li{
    display: -ms-flexbox;
    display: flex;
    -ms-flex-wrap: wrap;
    flex-wrap: wrap;
    {% if settings.enable_rtl %}
    margin-right: -5px;
    {% else %}
    margin-left: -5px;
    {% endif %}
  }
  .sidebar-filter ul.filter-selected li a{
    color: #fff;
    display: flex;
    align-items: center;
    padding: 5px 5px;
    {% if settings.enable_rtl %}
    margin: 5px 5px 0 0;
    {% else %}
    margin: 5px 0 0 5px;
    {% endif %}
    background-color: {{ settings.color_primary }};
    text-transform: capitalize;
    line-height: 1;
  }
  .sidebar-filter ul.filter-selected li a span{
    display: flex;
    align-items: center;
  }
  .sidebar-filter ul.filter-selected li a span i{
    font-size: 10px;
    {% if settings.enable_rtl %}
    margin-right: 5px;
    {% else %}
    margin-left: 5px;
    {% endif %}
  }

  /* variant content css */
  .shop-sidebar ul.scrollbar li .cust-checkbox-label{
    color: #222;
    font-size: 14px;
    display: flex;
    align-items: center;
    justify-content: space-between;
    position: relative;
    {% if settings.enable_rtl %}
    padding-right: 30px;
    {% else %}
    padding-left: 30px;
    {% endif %}
    cursor: pointer;
    -webkit-user-select: none;
    -moz-user-select: none;
    -ms-user-select: none;
    user-select: none;
    text-transform: capitalize;
  }
  .shop-sidebar ul.scrollbar li:hover .cust-checkbox-label .filter-name{ 
    color: {{ settings.color_primary }};
  }
  .shop-sidebar ul.scrollbar li label.cust-checkbox-label{
    margin-bottom: 0;
  }
  .shop-sidebar ul.scrollbar li .cust-checkbox-label span.filter-name{
    width: 100%;
    text-overflow: ellipsis;
    white-space: nowrap;
    overflow: hidden;
  }
  .shop-sidebar ul.scrollbar li input.cust-checkbox,
  .shop-sidebar ul.scrollbar li .cust-checkbox-label input.cust-checkbox {
    position: absolute;
    opacity: 0;
    cursor: pointer;
    height: 0;
    width: 0;
  }
  .shop-sidebar ul.scrollbar li .cust-checkbox-label .cust-check {
    position: absolute;
    {% if settings.enable_rtl %}
    right: 0;
    {% else %}
    left: 0;
    {% endif %}
    width: 17px;
    height: 17px;
    display: flex;
    align-items: center;
    justify-content: center;
    border: 1px solid #e2e2e2;
    background-color: #fff;
    border-radius: 100%;
  }
  .shop-sidebar ul.scrollbar li:hover .cust-checkbox-label .cust-check,
  .shop-sidebar ul.scrollbar li.active .cust-checkbox-label .cust-check{
    box-shadow: inset 0 0px 3px rgba(0, 0, 0, 0.2);
  }
  .shop-sidebar ul.scrollbar li.active .cust-checkbox.active-filter a.cust-checkbox-label .cust-check:after,
  .shop-sidebar ul.scrollbar li .cust-checkbox-label .cust-check.active-filter:after,
  .shop-sidebar ul.scrollbar li.active a.cust-checkbox-label .cust-check:after {
    content: "\f00c";
    font: normal normal normal 10px/1 FontAwesome;
    color: #222;
  }
  .shop-sidebar ul.scrollbar li .cust-checkbox-label.color .cust-check.active-filter:after{
    color: #fff;
  }
  @media (max-width: 767px){
    .shop-sidebar ul.scrollbar {
      padding-bottom: 15px;
    }
  }

  /* sidebar color filter css */
  .shop-sidebar.Color ul.scrollbar{
    display: -ms-flexbox;
    display: flex;
    -ms-flex-wrap: wrap;
    flex-wrap: wrap;
    margin-top: -5px;
    {% if settings.enable_rtl %}
    margin-right: -5px;
    {% else %}
    margin-left: -5px;
    {% endif %}
  }
  .shop-sidebar.Color ul.scrollbar li.color{
    padding: 0;
    {% if settings.enable_rtl %}
    margin: 5px 8px 0 0px;
    {% else %}
    margin: 5px 0 0 8px;
    {% endif %}
    border-top: none;
  }
  .shop-sidebar.Color ul.scrollbar li.color .cust-checkbox-label.color{
    {% if settings.enable_rtl %}
    padding-right: 0;
    {% else %}
    padding-left: 0;
    {% endif %}
  }
  .shop-sidebar.Color ul.scrollbar li.color .cust-checkbox-label.color span.filter-name{
    display: none;
  }
  .shop-sidebar.Color ul.scrollbar li.color .cust-checkbox-label.color span.cust-check{
    position: unset;
    width: 20px;
    height: 20px;
  }
  .shop-sidebar.Color ul.scrollbar li.color .cust-checkbox-label.color span.cust-check.active-filter:after{
    font: normal normal normal 10px/1 FontAwesome;
  }
</style>